package com.mali.ds.arrays;

import java.util.Arrays;

/* https://leetcode.com/contest/biweekly-contest-106/problems/movement-of-robots/ */
public class MovementOfRobots {

  public static int sumDistance(int[] nums, String s, int d) {

    int len = nums.length;
    char[] c = s.toCharArray();
    while (d > 0) {
      d--;
      for (int i = 0; i < len; i++) {
        if (i + 1 < len && c[i] == 'R' && c[i + 1] == 'L') {
          if (nums[i+1] - nums[i] == 0) {
            nums[i]--;
            nums[i + 1]++;
            c[i] = 'L';
            c[i + 1] = 'R';
          } else if (nums[i+1] - nums[i] == 1) {
            c[i] = 'L';
            c[i + 1] = 'R';
          } else {
            nums[i]++;
            nums[i + 1]--;
          }
          i++;
        } else {
          nums[i] = c[i] == 'R' ? nums[i]+1 : nums[i]-1;
        }
      }
    }

    Arrays.sort(nums);
    long ans = 0;
    int MOD = 1000000007;
    for (int i = len - 1, j = 0; i > 0; i--, j++) {
      ans += (Math.abs(nums[i] - nums[i - 1]) * (j * i  + i ))%MOD;
      ans %= MOD;
    }
    return (int) ans;
  }

  public static void main(String[] args) {
    int[] nums = {};
    String s = "RLLRRRLRLLRLLRRRRRLLRRRLLRLRLLRRLLLRRLRRRRLRLRRRRRLRRRLRLRLRLLLLRRLRRRLRLRLRLRRLLRRRLRLLRRLRRRLLLLLLRRLLLLLRLLRRRRRLRRRRRLRLLLRRLRLLRRRRRLRRLRLRLRLLRLRRLRLLLLRLRRRRLLLLLRLLLLLLLRRRLRRLLLRRLLRRLRRLRLLRRLRRRRRLRRRLRRLRRRRRRLRLRLRLRRRLRRLRLLLLLRLRRLRRRRLRLRRLLRRRRRLRLRRRRLLLLLRLRLRLRRRRRRLLLLRLLLLLRLLLLLRRRLRLRRRRRLLRLRRRLLLRRLRLRRLLLRRRLRLLLRLLLLRLLLRRRRRLRRLRLLRLRLLRRLRLRLRLRLLRRRRRRLLLRLRLLLRLRRRLLRRRLLRLRLRRRLLRLLLRRLRRLLLLRLLLRRRLRLRRLRLLRLRRLLLRLLRRRLLRRRLLRLRRRRRLRLRRLRRRLLLLLRLRRLLRLRRRLRLRRLLRRLLRLRRLLRLLLLLLLLLLLRLLRRLLLLRLRRLLRRRRLLRLRLRLRRLRRLRRRLRRRLRRRLLLRLRRRLRLRRRRRLRRLLRLLRLRRRLLLRLRLLLRLLRLLLRLRRLLRLLRLLLRRLRLRLRLRRRLRRLRRLLLRRLRRLRRRLLRRLLRLRLRRRRLLRLLLRRLRRRLRLLRRLRLRLLRLRLLLLRLLLLLRRRRLLLLLLRRLLLRLRLLRLRLRLLLLLLLRRLLRLLLLLRRRRLLLLLRRRLLLLLLLLRLRRLLRLRLRLLLRRRRRLRRRLRLRLRRLLLRLLLLLLLRLRLLRRRRLRLLRLLRRLLRRRLRRRLRRRRRLLLLRLRLRRRRRLR";
    int d = 665;
    System.out.println(sumDistance(nums, s, d));
  }
}
